import React,{useState}from "react"; import{motion,AnimatePresence}from "framer-motion"; import "./App.css"; const moods = ["Happy","Sad","Energetic","Chill","Romantic"]; const moodPlaylists: Record<string,string> ={Happy:"https://open.spotify.com/embed/playlist/37i9dQZF1DXdPec7aLTmlC",Sad: "https://open.spotify.com/embed/playlist/37i9dQZF1DX7qK8ma5wgG1",Energetic: "https://open.spotify.com/embed/playlist/37i9dQZF1DX76Wlfdnj7AP",Chill: "https://open.spotify.com/embed/playlist/37i9dQZF1DX889U0CL85jj",Romantic: "https://open.spotify.com/embed/playlist/37i9dQZF1DX50QitC6Oqtn",}; function App(){const [selectedMood,setSelectedMood] = useState<string | null>(null);const [loading,setLoading] = useState(false);const handleMoodClick = (mood: string) =>{setSelectedMood(mood);setLoading(true);// show shimmer until playlist loads}return (<div className="app-container"> <motion.h1 initial={{y: -50,opacity: 0}} animate={{y: 0,opacity: 1}} transition={{type: "spring",stiffness: 100}} className="title" > ðŸŽ¶ Mood Music </motion.h1> <motion.p initial={{opacity: 0}} animate={{opacity: 1}} transition={{delay: .3}} className="subtitle" > Pick your mood & enjoy curated playlists </motion.p> <div className="mood-grid"> {moods.map((mood,index) => (<motion.div key={index} className={`mood-card ${selectedMood === mood ? "active" : ""}`} whileHover={{scale: 1.1,rotate: 2}} whileTap={{scale: .95}} onClick={() => handleMoodClick(mood)} > {mood} </motion.div>))} </div> <AnimatePresence mode="wait"> {selectedMood && (<motion.div key={selectedMood} className="result-card" initial={{opacity: 0,y: 30}} animate={{opacity: 1,y: 0}} exit={{opacity: 0,y: -30}} transition={{duration: .5}} > <h2>You are feeling {selectedMood} ðŸ’¡</h2> {} {loading && <div className="shimmer-loader"></div>} <motion.iframe key={selectedMood + "-playlist"} src={moodPlaylists[selectedMood]} width="100%" height="380" frameBorder="0" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy" style={{display: loading ? "none" : "block"}} onLoad={() => setLoading(false)} // hide shimmer once iframe loads initial={{opacity: 0}} animate={{opacity: 1}} exit={{opacity: 0}} transition={{duration: .6}} ></motion.iframe> </motion.div>)} </AnimatePresence> </div>)}export default App; .app-container{min-height:100vh;background:linear-gradient(135deg,#1f1c2c,#928dab);color:#fff;font-family:Poppins,sans-serif;display:flex;flex-direction:column;align-items:center;padding:2rem;text-align:center}.title{font-size:3rem;margin-bottom:.5rem}.subtitle{font-size:1.2rem;margin-bottom:2rem;opacity:.85}.mood-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(120px,1fr));gap:1.2rem;width:100%;max-width:700px}.mood-card{background:#ffffff1a;border-radius:15px;padding:1rem;cursor:pointer;font-weight:700;font-size:1.1rem;transition:all .3s ease;text-align:center;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);box-shadow:0 8px 20px #0000004d}.mood-card.active{border:2px solid #fff;transform:scale(1.05)}.result-card{margin-top:2rem;padding:1.5rem;border-radius:20px;width:100%;max-width:700px;color:#fff;text-align:center;box-shadow:0 10px 30px #0006;position:relative;overflow:hidden}.result-card.Happy{background:linear-gradient(135deg,#f7971e,#ffd200)}.result-card.Sad{background:linear-gradient(135deg,#283e51,#485563)}.result-card.Energetic{background:linear-gradient(135deg,#ff416c,#ff4b2b)}.result-card.Chill{background:linear-gradient(135deg,#36d1dc,#5b86e5)}.result-card.Romantic{background:linear-gradient(135deg,#ff758c,#ff7eb3)}.result-card iframe{margin-top:1rem;border-radius:12px;transition:opacity .6s ease-in-out}.shimmer-loader{width:100%;height:380px;border-radius:12px;background:linear-gradient(90deg,#ffffff1a 25%,#ffffff4d,#ffffff1a 75%);background-size:200% 100%;animation:shimmer 1.5s infinite;margin-top:1rem}@keyframes shimmer{0%{background-position:-200% 0}to{background-position:200% 0}}@tailwind base;@tailwind components;@tailwind utilities;body{@apply bg-gradient-to-b from-purple-800 to-indigo-900 text-white;}
